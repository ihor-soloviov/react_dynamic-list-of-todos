{"version":3,"sources":["api.ts","types/FilterBy.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterBy","TodoList","todos","onSelectedTodo","selectedTodo","className","map","todo","id","completed","title","classNames","type","onClick","TodoFilter","onSearchInput","onSelectValue","todoSearchValue","filterBy","Active","All","Completed","value","onChange","e","target","placeholder","style","pointerEvents","Loader","TodoModal","onCloseTodo","useState","isLoading","setIsLoading","user","setUser","isError","setIsError","useEffect","setUserFromServer","a","userId","userData","href","email","name","App","setTodos","setSelectedTodo","setFilterBy","setTodoSearchValue","setTodosFromServer","allTodos","filteredTodos","useMemo","selectedTodos","filter","normalizedValue","toLowerCase","includes","isTableShown","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94d3ff52.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterBy {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n  onSelectedTodo: (todo: Todo) => void\n  selectedTodo: Todo | null\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo: Todo) => {\n          const { id, completed, title } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              key={id}\n              className={classNames({\n                'has-background-info-light': id === selectedTodo?.id,\n              })}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far', {\n                      'fa-eye': !selectedTodo,\n                      'fa-eye-slash': selectedTodo,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FilterBy } from '../../types/FilterBy';\n\ninterface Props {\n  onSearchInput : (input: string) => void\n  onSelectValue : (input: FilterBy) => void\n  todoSearchValue: string\n  filterBy: FilterBy\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSearchInput,\n  onSelectValue,\n  todoSearchValue,\n  filterBy,\n}) => {\n  const { Active, All, Completed } = FilterBy;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={(e) => {\n              onSelectValue(e.target.value as FilterBy);\n            }}\n          >\n            <option value={All}>All</option>\n            <option value={Active}>Active</option>\n            <option value={Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={todoSearchValue}\n          onChange={(e) => {\n            onSearchInput(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {todoSearchValue && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onSearchInput('');\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\ninterface Props {\n  selectedTodo: Todo\n  onCloseTodo: (todo: Todo | null) => void\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onCloseTodo,\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const setUserFromServer = async () => {\n      try {\n        const userData = await getUser(selectedTodo.userId);\n\n        setUser(userData);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    setUserFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onCloseTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              {isError\n                ? (\n                  <span>\n                    {' Guest'}\n                  </span>\n                )\n                : (\n                  <a href={user?.email}>\n                    {user?.name}\n                  </a>\n                )}\n\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { FilterBy } from './types/FilterBy';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState<FilterBy>(FilterBy.All);\n  const [todoSearchValue, setTodoSearchValue] = useState('');\n\n  useEffect(() => {\n    const setTodosFromServer = async () => {\n      try {\n        const allTodos = await getTodos();\n\n        setTodos(allTodos);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    setTodosFromServer();\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    const selectedTodos = todos.filter(todo => {\n      switch (filterBy) {\n        case FilterBy.Completed:\n          return todo.completed;\n\n        case FilterBy.Active:\n          return !todo.completed;\n\n        default:\n          return todos;\n      }\n    });\n\n    if (todoSearchValue) {\n      const normalizedValue = todoSearchValue.toLowerCase();\n\n      return selectedTodos.filter(todo => todo.title.toLowerCase().includes(normalizedValue));\n    }\n\n    return selectedTodos;\n  }, [todos, filterBy, todoSearchValue]);\n\n  const isTableShown = !isLoading && !isError;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSearchInput={setTodoSearchValue}\n                todoSearchValue={todoSearchValue}\n                onSelectValue={setFilterBy}\n                filterBy={filterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {isError && <p> There is no todos </p>}\n              {isTableShown\n                && (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    onSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onCloseTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}